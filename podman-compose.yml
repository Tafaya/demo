version: '3.7'

services:
  postgresdb:
    image: postgres
    restart: unless-stopped
    env_file: ./.env
    environment:
      - POSTGRES_USER=$POSTGRESDB_USER
      - POSTGRES_PASSWORD=$POSTGRESDB_ROOT_PASSWORD
      - POSTGRES_DB=$POSTGRESDB_DATABASE
    ports:
      - $POSTGRESDB_LOCAL_PORT:$POSTGRESDB_DOCKER_PORT
    #healthcheck:
      #test: ["CMD-SHELL", "pg_isready -d postgres -U postgres"]
      #interval: 10s
      #timeout: 5s
      #retries: 5
  app_8081:
    depends_on:
      - postgresdb
      #postgresdb:
        #condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile_8081
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT_1:$SPRING_DOCKER_PORT_1
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://10.88.0.2:$POSTGRESDB_DOCKER_PORT/$POSTGRESDB_DATABASE",
        "spring.datasource.username" : "$POSTGRESDB_USER",
        "spring.datasource.password" : "$POSTGRESDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
  app_8082:
    depends_on:
      - postgresdb
      #postgresdb:
        #condition: service_healthy
    build:
      context: .
      dockerfile: Dockerfile_8082
    restart: on-failure
    env_file: ./.env
    ports:
      - $SPRING_LOCAL_PORT_2:$SPRING_DOCKER_PORT_2
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://10.88.0.2:$POSTGRESDB_DOCKER_PORT/$POSTGRESDB_DATABASE",
        "spring.datasource.username" : "$POSTGRESDB_USER",
        "spring.datasource.password" : "$POSTGRESDB_ROOT_PASSWORD",
        "spring.jpa.properties.hibernate.dialect" : "org.hibernate.dialect.PostgreSQLDialect",
        "spring.jpa.hibernate.ddl-auto" : "update"
      }'
    #volumes:
      #- .m2:/root/.m2
    #stdin_open: true
    #tty: true

#volumes:
  #db:


